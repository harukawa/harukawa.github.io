---
layout: post
title:  "Gitのコミット整理について"
date:   2019-07-15 18:48:57 +0900
categories: jekyll update
---
Gitのコミット整理を教えてもらったので、やり方含めて忘れないうちに書いておく。

まずコミット履歴は他人に見てもらうということを意識して書かないといけない。
コミットのメッセージが変更内容と違っていたり、コミット量が多いと読みにくく、理解するのに時間がかかる。
そのため、コミットをまとめたり並び変えたりして整理する必要がある。

コミット整理を始めるにあたって、まず整理用のブランチを作成しないといけない。ここではbranch_prとする。
このbranch_prは作業を行う前のブランチからコピーして作成する。このブランチに作業のコミットを付け足していくことでコミット整理されたブランチが作れる。

branch_prにコミットを付け足すにはcherry-pickを使います。
Source TreeならHistoryからコミットを右クリックするとチェリーピックがあるのでこれをクリックするだけで行えます。
  
コマンドは　　`git cherry-pick コミットID`

cherry-pickを行うことで、対象のコミットがbranch_prのHEADになります。
もう一度cherry-pickを行えば同様にコミットが足されるので、これを繰り返していきます。  
コミットを足す場合は順番に気を付けないといけません。仮にコミット作業の種類が画面とサーバー、入力と出力といったAとBの二つだとします。
コミットが A -> B -> A　という順番になっていた場合、整理をする際は　　  
B -> A -> A　もしくは A -> A -> B　とBを最初か最後のどちらかにすることで見やすくします。

コミットを複数足したところでこれを一つのコミットにしたい時があります。 
上記の B -> A -> A であればAとAを一つのAとして B -> A　とできます。
まず 'git rebase -i HEAD~3' とコマンドを打ちます。最後の~3の数字の部分は遡るコミットの数を指定する箇所なので、
その時に操作したいコミットの数だけ指定します。 
このコマンドを打つと下記のようなコミット履歴が書かれたテキストが開きます。

pick abc1234 B  
pick def5678 A-1  
pick ghi9012 A-2  

コミットIDの省略形、コミットメッセージが古いものから上から順に並んでいます。
A-1とA-2を一つのコミットにしたい場合は、テキストを以下のように書き換えます。

pick abc1234 B  
pick def5678 A-1  
squash ghi9012 A-2  

A-2のpickをsquashに書き換えることで、A-2とその直前のコミットであるA-1をマージした一つのコミットが作成できます。
テキストを書き換えた後はそのままテキストを閉じると、またテキスト画面が表示されます。  
このテキスト画面はマージしたコミットのメッセージを設定するための
ものなので、ここにマージしたコミットメッセージを書きます。そして先ほどと同じようにテキストを閉じればマージの完了です。  
こうして整理が出来たbranch_prを最後にmasterにマージすれば作業は完了です。整理前のブランチは後から確認する際などに必要に
なるかもしれないので、しばらくの間はブランチ名を変えて残しておきます。

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
